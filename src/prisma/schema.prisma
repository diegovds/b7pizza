// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id            String          @id @default(uuid())
  name          String
  image         String          @default("default.jpg")
  price         Decimal         @db.Money()
  ingredients   String?
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  orderProducts OrderProducts[]

  @@map("products")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  orders    Order[]

  @@map("users")
}

model Order {
  id        String      @id @default(uuid())
  userId    String
  obs       String?
  status    OrderStatus @default(INITIALIZED)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt

  user          User            @relation(fields: [userId], references: [id])
  orderProducts OrderProducts[]

  @@map("orders")
}

model OrderProducts {
  id        String   @id @default(uuid())
  orderId   String
  productId String
  quantity  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  order   Order   @relation(fields: [orderId], references: [id])
  product Product @relation(fields: [productId], references: [id])

  @@map("orderProducts")
}

enum OrderStatus {
  INITIALIZED
  IN_REVIEW
  PAID
  SENT
  DELIVERED
  CANCELED
}
